<UserControl x:Class="OnnxStack.UI.UserControls.FilePickerTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OnnxStack.UI.UserControls"
             mc:Ignorable="d" Name="UI">
    <UserControl.Resources>
        <Style x:Key="TextBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <DockPanel DataContext="{Binding ElementName=UI}">
        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
            <Button Command="{Binding OpenFileDialogCommand}" Padding="15, 0">
                <StackPanel Orientation="Horizontal">
                    <local:FontAwesome Icon="&#xf002;" Size="12" />
                    <TextBlock Text="Browse" Margin="4,0,0,0"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding ClearFileCommand}" Visibility="{Binding IsRequired, Converter={StaticResource InverseBooleanToVisibilityConverter}}" Width="24" BorderThickness="0,1,1,1" >
                <local:FontAwesome Icon="&#xf00d;" Size="15" IconStyle="Light"/>
            </Button>
        </StackPanel>
        
        <TextBox>
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Setter Property="Height" Value="25" />
                    <Setter Property="Padding" Value="1,3,1,1" />
                    <Setter Property="BorderThickness" Value="1,1,0,1" />
                    <Setter Property="Text" Value="{Binding FileName, ElementName=UI, NotifyOnValidationError=False}" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, ElementName=UI}" Value="True"/>
                                <Condition Binding="{Binding IsRequired}" Value="True"/>
                                <Condition Binding="{Binding IsFolderPicker}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Text">
                                <Setter.Value>
                                    <Binding Path="FileName" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                        <Binding.ValidationRules>
                                            <local:FileExistsValidationRule IsRequired="True" IsFolder="False" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, ElementName=UI}" Value="True"/>
                                <Condition Binding="{Binding IsRequired}" Value="True"/>
                                <Condition Binding="{Binding IsFolderPicker}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Text">
                                <Setter.Value>
                                    <Binding Path="FileName" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                        <Binding.ValidationRules>
                                            <local:FileExistsValidationRule IsRequired="True" IsFolder="True" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRequired}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
    </DockPanel>
</UserControl>
