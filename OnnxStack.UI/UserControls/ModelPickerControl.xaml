<UserControl x:Class="OnnxStack.UI.UserControls.ModelPickerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OnnxStack.UI.UserControls"
             mc:Ignorable="d" 
             d:DesignWidth="500" Name="UI">
    <UserControl.Resources>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="-4,0,0,-4"/>
        </Style>
        <Storyboard x:Key="LoadingAnimation" >
            <DoubleAnimation Storyboard.TargetName="SpinnerIcon" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:1" RepeatBehavior="Forever" />
        </Storyboard>
    </UserControl.Resources>

    <DockPanel DataContext="{Binding ElementName=UI}">
        <TextBlock DockPanel.Dock="Top" Text="Models"/>
        <DockPanel>
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Visibility="{Binding SelectedModel, Converter={StaticResource NullVisibilityConverter}}">
                <Button BorderThickness="0,1,1,1" ToolTip="Load Model" Width="80"
                    Command="{Binding LoadCommand}" 
                    Visibility="{Binding SelectedModel.IsLoaded, FallbackValue=Visible, TargetNullValue=Visible, Converter={StaticResource InverseBooleanToVisibilityConverter}}" 
                    IsEnabled="{Binding SelectedModel.IsLoading, Converter={StaticResource InverseBoolConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <local:FontAwesome x:Name="SpinnerIcon" Icon="&#xf110;"  Size="12" Margin="0,0,4,0" Width="12" Height="12"
                            RenderTransformOrigin="0.5,0.5"
                            Visibility="{Binding SelectedModel.IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <local:FontAwesome.RenderTransform>
                                <RotateTransform Angle="0"  />
                            </local:FontAwesome.RenderTransform>
                        </local:FontAwesome>
                        <TextBlock Text="Load"/>
                    </StackPanel>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard x:Name="SpinnerIconAnimation" Storyboard="{StaticResource LoadingAnimation}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Unloaded">
                            <StopStoryboard BeginStoryboardName="SpinnerIconAnimation" />
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <Button BorderThickness="0,1,1,1" ToolTip="Unload Model" Width="80"
                    Command="{Binding UnloadCommand}" 
                    Visibility="{Binding SelectedModel.IsLoaded, FallbackValue=Collapsed, TargetNullValue=Collapsed, Converter={StaticResource BooleanToVisibilityConverter}}"
                    IsEnabled="{Binding SelectedModel.IsLoading, Converter={StaticResource InverseBoolConverter}}">
                    <TextBlock Text="Unload"/>
                </Button>
            </StackPanel>
            <ComboBox 
                DisplayMemberPath="Name" 
                ItemsSource="{Binding Models}" 
                SelectedItem="{Binding SelectedModel}" 
                IsEnabled="{Binding SelectedModel.IsLoading, FallbackValue=True, TargetNullValue=True, Converter={StaticResource InverseBoolConverter}}" >
             
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                <Setter Property="Visibility">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource DiffuserVisibilityConverter}">
                                            <Binding Path="ModelOptions.Diffusers"/>
                                            <Binding Path="SupportedDiffusers" ElementName="UI" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
        </DockPanel>
    </DockPanel>

</UserControl>
